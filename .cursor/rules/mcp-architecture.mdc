---
globs: src/**/*.ts,src/**/*.tsx
---
# MCP アーキテクチャ指針（Model-Controller-Presenter）

gBizINFO API を利用したアプリは、以下の責務分離に従います。

## Model（ドメインモデル）
- 役割: APIレスポンスを業務的意味のある形に正規化
- 配置: [`src/model`](mdc:src/model)
- ルール:
  - API 型とドメイン型を分離（生成クライアント型をそのまま伝播させない）
  - 変換は Service 層で行い、Model は不変・値オブジェクト指向で実装

## Controller（アプリケーション制御）
- 役割: 入力受理、ユースケース実行、バリデーション、エラー分岐
- 配置: [`src/controller`](mdc:src/controller)
- ルール:
  - Controller は Service に依存、Presenter にデータを渡す
  - 非同期処理のエラーは分類して返却（入力/ドメイン/通信/予期せぬ）

## Presenter（出力整形）
- 役割: Model を UI/外部I/F 向けに整形（DTO/VM）
- 配置: [`src/presenter`](mdc:src/presenter)
- ルール:
  - 時刻/数値/住所などのフォーマットを集約
  - i18n/ローカライズが必要な場合はここに集約

## Service（ユースケース/外部API）
- 役割: 生成クライアントをラップし、レート制御・リトライ・キャッシュ
- 配置: [`src/services`](mdc:src/services)
- ルール:
  - 外部APIの詳細（エンドポイント/クエリ）は Service に閉じる
  - 例外/HTTPエラーは意味あるアプリ例外にマッピング

