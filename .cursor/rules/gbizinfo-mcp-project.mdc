---
alwaysApply: true
---
# gBizINFO MCP プロジェクト構成ガイド

このルールは、gBizINFO 情報提供API（`https://info.gbiz.go.jp/hojin/swagger-ui/index.html`）に基づく MCP（Model-Controller-Presenter）実装の標準的な構成・開発フローを示します。

## エントリポイントと構成
- エントリポイント: [`src/index.ts`](mdc:src/index.ts)
- 設定/環境変数: [`src/config.ts`](mdc:src/config.ts)（`.env` を読み込み、APIトークン等を検証）
- OpenAPI スキーマ配置: [`openapi/gbizinfo-openapi.yaml`](mdc:openapi/gbizinfo-openapi.yaml)
- 生成クライアント配置: デフォルトで [`src/clients/gbizinfo`](mdc:src/clients/gbizinfo)
- 層構造:
  - Model: [`src/model`](mdc:src/model)
  - Controller: [`src/controller`](mdc:src/controller)
  - Presenter: [`src/presenter`](mdc:src/presenter)
  - Service(ユースケース/外部API連携): [`src/services`](mdc:src/services)

## 主要ファイル（推奨）
- Model 例: [`src/model/Company.ts`](mdc:src/model/Company.ts)
- Controller 例: [`src/controller/CompanySearchController.ts`](mdc:src/controller/CompanySearchController.ts)
- Presenter 例: [`src/presenter/CompanyPresenter.ts`](mdc:src/presenter/CompanyPresenter.ts)
- gBizINFO向けサービス: [`src/services/gbizinfoService.ts`](mdc:src/services/gbizinfoService.ts)
- HTTP基盤（リトライ/レート制御）: [`src/services/http.ts`](mdc:src/services/http.ts)

## 開発フロー（概要）
1. OpenAPI スキーマを取得し、`openapi/gbizinfo-openapi.yaml` に保存
2. スキーマからクライアントを生成し、`src/clients/gbizinfo` に配置
3. Service 層でクライアントをラップし、ドメイン Model へ変換
4. Controller でユースケース/入力を受け取り Service を統合
5. Presenter でUI/レスポンス向けの形に整形

詳細なクライアント生成手順は、[`openapi-client.mdc`](mdc:.cursor/rules/openapi-client.mdc) を参照してください。

