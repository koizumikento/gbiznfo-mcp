---
alwaysApply: true
---
# gBizINFO MCP プロジェクト構成ガイド

このルールは、gBizINFO 情報提供API（`https://info.gbiz.go.jp/hojin/swagger-ui/index.html`）に基づく MCP（Model-Controller-Presenter）実装の標準的な構成・開発フローを示します。

## エントリポイントと構成

- エントリポイント: [`javascript/src/index.ts`](mdc:javascript/src/index.ts)
- 設定/環境変数: [`javascript/src/config.ts`](mdc:javascript/src/config.ts)（`.env` を読み込み、APIトークン等を検証）
- OpenAPI スキーマ配置: [`openapi/gbizinfo-openapi.json`](mdc:openapi/gbizinfo-openapi.json)
- HTTP 基盤/クライアント実装: [`javascript/src/services`](mdc:javascript/src/services)
- 層構造:
  - Model: [`javascript/src/model`](mdc:javascript/src/model)
  - Controller: [`javascript/src/controller`](mdc:javascript/src/controller)
  - Presenter: [`javascript/src/presenter`](mdc:javascript/src/presenter)
  - Service(ユースケース/外部API連携): [`javascript/src/services`](mdc:javascript/src/services)

## 主要ファイル（推奨）

- Model 例: [`javascript/src/model/Company.ts`](mdc:javascript/src/model/Company.ts)
- Controller 例: [`javascript/src/controller/CompanySearchController.ts`](mdc:javascript/src/controller/CompanySearchController.ts)
- Presenter 例: [`javascript/src/presenter/CompanyPresenter.ts`](mdc:javascript/src/presenter/CompanyPresenter.ts)
- gBizINFO向けサービス: [`javascript/src/services/gbizinfoService.ts`](mdc:javascript/src/services/gbizinfoService.ts)
- HTTP基盤（リトライ/レート制御）: [`javascript/src/services/http.ts`](mdc:javascript/src/services/http.ts)

## 開発フロー（概要）

1. OpenAPI スキーマを取得し、`openapi/gbizinfo-openapi.json` に保存
2. Service 層で手書きの HTTP クライアント/DTO/アダプタを実装（生成ツールは使用しない）
3. Service 層で外部レスポンスをドメイン Model へ変換
4. Controller でユースケース/入力を受け取り Service を統合
5. Presenter で UI/レスポンス向けの形に整形

手書きクライアント/DTO の指針は、[`openapi-client.mdc`](mdc:.cursor/rules/openapi-client.mdc) を参照してください。
